# frozen_string_literal: true

module VulnerabilityExports
  class ExportDeletionWorker
    include ApplicationWorker

    feature_category :vulnerability_management

    idempotent!

    def perform(project_id, vulnerability_export_id)
      project = Project.find(project_id)
      vulnerability_export = project.vulnerability_exports.find(vulnerability_export_id)

      return if project.blank? || vulnerability_export.blank?

      vulnerability_export.destroy!
    rescue => error
      logger.error class: self.class.name, message: error.message
    end
  end
end
