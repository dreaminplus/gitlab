# frozen_string_literal: true

module VulnerabilityExports
  class ExportCsvService
    attr_reader :vulnerabilities

    def initialize(vulnerabilities_relation)
      @vulnerabilities = vulnerabilities_relation
    end

    def csv_data(&block)
      csv_builder.render(&block)
    end

    def csv_builder
      @csv_builder ||= CsvBuilder.new(vulnerabilities.with_findings_and_scanner, header_to_value_hash)
    end

    private

    def header_to_value_hash
      {
        'Scanner Type' => 'report_type',
        'Scanner Name' => 'finding_scanner_name',
        'Status' => 'state',
        'Vulnerability' => 'title',
        'Details' => 'description',
        'Additional Info' => -> (vulnerability) { vulnerability.finding_metadata&.fetch('message', nil) },
        'Severity' => 'severity',
        'CVE' => -> (vulnerability) { vulnerability.finding_metadata&.fetch('cve', nil) }
      }
    end
  end
end
